// <div class='close-modal-wrapper'>
//   <button id='close-modal--work' class='close' type='button' aria-label='Close'>
//     <span class='close-box'>
//       <span class='close-inner'></span>
//     </span>
//   </button>
// </div>

.close {
  background-color: rgba(0,0,0,.01);;
  border: 0;
  color: inherit;
  cursor : pointer;
  display: inline-block;
  font: inherit;
  height: 100%;
  margin: 0;
  outline: 0;
  overflow: visible;
  padding: 0 map-get($burger, padding);
  text-transform: none;
  transition-duration: map-get($burger, hover-transition-duration);
  transition-property: opacity, filter;
  transition-timing-function: map-get($burger, hover-transition-timing-function);

  &:hover {
    @if $burger-hover-use-filter == true {
      filter: $burger-hover-filter;
    } @else {
      // opacity: map-get($burger, hover-opacity);
    }
  }
}

.close-box {
  display: inline-block;
  height: map-get($burger, layer-height) * 3 + map-get($burger, layer-spacing) * 2;
  position: relative;
  vertical-align: middle;
  width: map-get($burger, layer-width);
}

.close-inner {
  display: block;
  margin-top: map-get($burger, layer-height) / -2;
  top: 50%;
  transition-duration: 220ms;
  transition-timing-function: cubic-bezier(.55, .055, .675, .19);

  &,
  &::before,
  &::after {
    background-color: map-get($burger, layer-color);
    border-radius: map-get($burger, layer-border-radius);
    height: map-get($burger, layer-height);
    position: absolute;
    transition-duration: 150ms;
    transition-property: transform;
    transition-timing-function: ease;
    width: map-get($burger, layer-width);
  }

  &::before,
  &::after {
    content: '';
    display: block;
  }

  &::before {
    top: (map-get($burger, layer-spacing) + map-get($burger, layer-height)) * -1;
    transition: top 100ms 250ms ease-in, opacity 100ms ease-in;
  }

  &::after {
    bottom: (map-get($burger, layer-spacing) + map-get($burger, layer-height)) * -1;
    transition: bottom 100ms 250ms ease-in, transform 220ms cubic-bezier(.55, .055, .675, .19);
  }
}

.close {
  &.is-active {
    .close-inner {
      transform: rotate(225deg);
      transition-delay: 120ms;
      transition-timing-function: cubic-bezier(.215, .61, .355, 1);

      &::before {
        opacity: 0;
        top: 0;
        transition: top 100ms ease-out,
                    opacity 100s 120ms ease-out;
      }

      &::after {
        bottom: 0;
        transform: rotate(-90deg);
        transition: bottom 100ms ease-out, transform 220ms 120ms cubic-bezier(.215, .61, .355, 1);
      }
    }
  }
}
